{"ast":null,"code":"var _jsxFileName = \"/home/rebby/Desktop/ConectarReact/src/components/AnimeCardDetails.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass AnimeCardDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anime: []\n    }; //Fetching all animes\n\n    const proxyurl = 'https://cors-anywhere.herokuapp.com/';\n    const url = \"https://notmyanimelist.herokuapp.com/anime/\".concat(this.props.location.state.id); // site that doesn’t send Access-Control-*\n\n    fetch(proxyurl + url) // https://cors-anywhere.herokuapp.com/https://example.com\n    .then(response => response.json()).then(data => {\n      data.map(data1 => {\n        return this.setState({\n          anime: data1\n        });\n      });\n    }).catch(() => console.log('Can’t access ' + url + ' response. Blocked by browser?')); //Fetching all characters\n\n    const url2 = \"https://notmyanimelist.herokuapp.com/character/\".concat(this.props.location.state.id); // site that doesn’t send Access-Control-*\n\n    fetch(proxyurl + url2) // https://cors-anywhere.herokuapp.com/https://example.com\n    .then(response => response.json()).then(data => {\n      data.map(data1 => {\n        return this.setState({\n          character: data1\n        });\n      });\n    }).catch(() => console.log('Can’t access ' + url + ' response. Blocked by browser?'));\n  }\n\n  render() {\n    const _this$state = this.state,\n          anime = _this$state.anime,\n          character = _this$state.character;\n    console.log(anime);\n    console.log(character);\n    return React.createElement(\"div\", {\n      style: {\n        color: '#fff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"movie-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Back\")), React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: !character ? '' : character.img.src,\n      alt: \"cover\",\n      class: \"cover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"hero\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"title1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, anime.title), React.createElement(\"div\", {\n      class: \"title2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, anime.title))), React.createElement(\"div\", {\n      class: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"column1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" Genres\"), !anime.genres ? '' : anime.genres.map(data => React.createElement(\"span\", {\n      class: \"tag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, data))), React.createElement(\"div\", {\n      class: \"column2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, anime.synopsis), React.createElement(\"div\", {\n      class: \"avatars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, !character ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"*No characters found for this anime*\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: character.img.src,\n      alt: \"character\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \" \", character.name))))))));\n  }\n\n}\n\nexport default AnimeCardDetails;","map":{"version":3,"sources":["/home/rebby/Desktop/ConectarReact/src/components/AnimeCardDetails.js"],"names":["React","Component","Link","AnimeCardDetails","constructor","props","state","anime","proxyurl","url","location","id","fetch","then","response","json","data","map","data1","setState","catch","console","log","url2","character","render","color","img","src","title","genres","synopsis","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nclass AnimeCardDetails extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tanime: [],\n\t\t};\n\n\t\t//Fetching all animes\n\n\t\tconst proxyurl = 'https://cors-anywhere.herokuapp.com/';\n\t\tconst url = `https://notmyanimelist.herokuapp.com/anime/${this.props.location.state.id}`; // site that doesn’t send Access-Control-*\n\t\tfetch(proxyurl + url) // https://cors-anywhere.herokuapp.com/https://example.com\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tdata.map(data1 => {\n\t\t\t\t\treturn this.setState({\n\t\t\t\t\t\tanime: data1,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\n\t\t\t.catch(() => console.log('Can’t access ' + url + ' response. Blocked by browser?'));\n\n\t\t//Fetching all characters\n\t\t\n\t\tconst url2 = `https://notmyanimelist.herokuapp.com/character/${this.props.location.state.id}`; // site that doesn’t send Access-Control-*\n\t\tfetch(proxyurl + url2) // https://cors-anywhere.herokuapp.com/https://example.com\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tdata.map(data1 => {\n\t\t\t\treturn this.setState({\n\t\t\t\t\t\tcharacter: data1,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\n\t\t\t.catch(() => console.log('Can’t access ' + url + ' response. Blocked by browser?'));\n\t}\n\n\trender() {\n\t\tconst { anime, character } = this.state;\n\t\tconsole.log(anime);\n\t\tconsole.log(character)\n\t\treturn (\n\t\t\t<div style={{ color: '#fff' }}>\n\t\t\t\t<div class=\"movie-card\">\n\t\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t\t<h4 className=\"back\">Back</h4>\n\t\t\t\t\t</Link>\n\n\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={!character ? '' :character.img.src}\n\t\t\t\t\t\t\t\talt=\"cover\"\n\t\t\t\t\t\t\t\tclass=\"cover\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t<div class=\"hero\">\n\t\t\t\t\t\t\t<div class=\"details\">\n\t\t\t\t\t\t\t\t<div class=\"title1\">{anime.title}</div>\n\n\t\t\t\t\t\t\t\t<div class=\"title2\">{anime.title}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"description\">\n\t\t\t\t\t\t\t<div class=\"column1\">\n\t\t\t\t\t\t\t<h4> Genres</h4>\n\t\t\t\t\t\t\t\t{!anime.genres ? '' : anime.genres.map(data => <span class=\"tag\">{data}</span>)}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div class=\"column2\">\n\t\t\t\t\t\t\t\t<p>{anime.synopsis}</p>\n\n\t\t\t\t\t\t\t\t<div class=\"avatars\">\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t!character\n\t\t\t\t\t\t\t\t\t? <p>*No characters found for this anime*</p>\n\t\t\t\t\t\t\t\t\t: <div>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tsrc={character.img.src}\n\t\t\t\t\t\t\t\t\t\t\talt=\"character\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<p> {character.name}</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default AnimeCardDetails;\n"]},"metadata":{},"sourceType":"module"}